%article{:class => ((answer == answer.question_accepted_answer) ? "questionAnswer validated" : "questionAnswer")}
  %div.questionAnswerDescription
    .userMarkdown
      = markdown answer.description
    .postHourUser
      %span
        Postée il y a #{distance_of_time_in_words_to_now(answer.created_at)} 
        par #{link_to answer.user.username, user_path(answer.user)} 
        = image_tag answer.user.gravatar_url
  %div.questionAnswerVotes
    %div #{answer.votes}
    - if user_signed_in?
      - if can? :vote, answer
        = link_to "Vote up", vote_question_answer_path(answer.question, answer, :vote => "up"), :class => "answer_vote_up", "data-skip-pjax" => "true"
        = link_to "Vote down", vote_question_answer_path(answer.question, answer, :vote => "down"), :class => "answer_vote_down", "data-skip-pjax" => "true"
      -else
        = link_to "Vote up", "#", :class => "answer_vote_up disabled"
        = link_to "Vote down", "#", :class => "answer_vote_down disabled"
      =  if can? :accept, answer
        = link_to "Accepter la réponse", accept_question_answer_path(answer.question, answer),:class => "answer_accept", "data-skip-pjax" => "true"
    -else
      = link_to "Vote up", "#", :class => "answer_vote_up disabled"
      = link_to "Vote down", "#", :class => "answer_vote_down disabled"
  %div.clear
